name: "Build"

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Check Xcode version
        run: /usr/bin/xcodebuild -version

      # 如果仓库里确实需要 pnpm 再保留；否则可以删除
      - uses: pnpm/action-setup@v4
        with:
          version: 9.9.0

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # ← 非 Go 项目，删除 setup-go，避免 go.sum 缓存报错
      # - uses: actions/setup-go@v5
      #   with:
      #     go-version: '1.22.5'
      #     cache: false

      - name: Install dependencies (safe)
        # 失败就 fail，便于排查；不再吞错
        run: |
          brew update
          # 只在缺失时安装，避免与 pinned tap 冲突
          for pkg in cmake ninja nasm yasm pkg-config autoconf automake libtool; do
            if ! brew list --versions "$pkg" >/dev/null 2>&1; then
              brew install "$pkg"
            else
              echo "✅ $pkg already installed: $(brew list --versions $pkg)"
            fi
          done
          # 如需要 OpenSSL，确认/安装 openssl@3（不要卸载系统自带 openssl）
          if ! brew list --versions openssl@3 >/dev/null 2>&1; then
            brew install openssl@3
          fi
          cmake --version

      # 使用官方发行包安装 protoc 28.3，避免 Homebrew tap 复杂性
      - name: Setup protoc 28.3
        uses: arduino/setup-protoc@v3
        with:
          version: "28.3"

      - name: Verify protoc
        run: |
          which protoc || true
          protoc --version || { echo "protoc is missing; protobuf install/link likely failed" >&2; exit 1; }
          # 如需严格要求 28.3 版本，可打开以下检查
          if [ -n "${STRICT_PROTOBUF_VERSION:-1}" ]; then
            protoc --version | grep -q "libprotoc 28.3" || { echo "Expected libprotoc 28.3" >&2; exit 1; }
          fi

      - name: Build
        run: make

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: output/
